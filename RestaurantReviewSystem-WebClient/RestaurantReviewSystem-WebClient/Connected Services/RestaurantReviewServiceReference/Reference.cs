//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestaurantReview", Namespace="http://schemas.datacontract.org/2004/07/RestaurantReviewSystem")]
    [System.SerializableAttribute()]
    public partial class RestaurantReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RestaurantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReviewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double cleanlinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double parkingfacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double quality_of_foodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double serviceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RestaurantId {
            get {
                return this.RestaurantIdField;
            }
            set {
                if ((this.RestaurantIdField.Equals(value) != true)) {
                    this.RestaurantIdField = value;
                    this.RaisePropertyChanged("RestaurantId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReviewId {
            get {
                return this.ReviewIdField;
            }
            set {
                if ((this.ReviewIdField.Equals(value) != true)) {
                    this.ReviewIdField = value;
                    this.RaisePropertyChanged("ReviewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double cleanliness {
            get {
                return this.cleanlinessField;
            }
            set {
                if ((this.cleanlinessField.Equals(value) != true)) {
                    this.cleanlinessField = value;
                    this.RaisePropertyChanged("cleanliness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double parkingfacility {
            get {
                return this.parkingfacilityField;
            }
            set {
                if ((this.parkingfacilityField.Equals(value) != true)) {
                    this.parkingfacilityField = value;
                    this.RaisePropertyChanged("parkingfacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double quality_of_food {
            get {
                return this.quality_of_foodField;
            }
            set {
                if ((this.quality_of_foodField.Equals(value) != true)) {
                    this.quality_of_foodField = value;
                    this.RaisePropertyChanged("quality_of_food");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double service {
            get {
                return this.serviceField;
            }
            set {
                if ((this.serviceField.Equals(value) != true)) {
                    this.serviceField = value;
                    this.RaisePropertyChanged("service");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RestaurantReviewServiceReference.IRestaurantReviewService")]
    public interface IRestaurantReviewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/GetReviewByUserId", ReplyAction="http://tempuri.org/IRestaurantReviewService/GetReviewByUserIdResponse")]
        RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[] GetReviewByUserId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/GetReviewByUserId", ReplyAction="http://tempuri.org/IRestaurantReviewService/GetReviewByUserIdResponse")]
        System.Threading.Tasks.Task<RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[]> GetReviewByUserIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/AddReview", ReplyAction="http://tempuri.org/IRestaurantReviewService/AddReviewResponse")]
        int AddReview(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/AddReview", ReplyAction="http://tempuri.org/IRestaurantReviewService/AddReviewResponse")]
        System.Threading.Tasks.Task<int> AddReviewAsync(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/UpdateReview", ReplyAction="http://tempuri.org/IRestaurantReviewService/UpdateReviewResponse")]
        int UpdateReview(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/UpdateReview", ReplyAction="http://tempuri.org/IRestaurantReviewService/UpdateReviewResponse")]
        System.Threading.Tasks.Task<int> UpdateReviewAsync(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserId", ReplyAction="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserIdResponse")]
        int DeleteReviewByUserId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserId", ReplyAction="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserIdResponse")]
        System.Threading.Tasks.Task<int> DeleteReviewByUserIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserIdandRestaurantId", ReplyAction="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserIdandRestaurantIdRe" +
            "sponse")]
        int DeleteReviewByUserIdandRestaurantId(string userid, int restaurantid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserIdandRestaurantId", ReplyAction="http://tempuri.org/IRestaurantReviewService/DeleteReviewByUserIdandRestaurantIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> DeleteReviewByUserIdandRestaurantIdAsync(string userid, int restaurantid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantId", ReplyAction="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantIdResponse")]
        RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[] GetReviewByRestaurantId(int restaurantid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantId", ReplyAction="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantIdResponse")]
        System.Threading.Tasks.Task<RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[]> GetReviewByRestaurantIdAsync(int restaurantid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantIdandUserId", ReplyAction="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantIdandUserIdRespo" +
            "nse")]
        RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview GetReviewByRestaurantIdandUserId(int restuarantid, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantIdandUserId", ReplyAction="http://tempuri.org/IRestaurantReviewService/GetReviewByRestaurantIdandUserIdRespo" +
            "nse")]
        System.Threading.Tasks.Task<RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview> GetReviewByRestaurantIdandUserIdAsync(int restuarantid, string userid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestaurantReviewServiceChannel : RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.IRestaurantReviewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestaurantReviewServiceClient : System.ServiceModel.ClientBase<RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.IRestaurantReviewService>, RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.IRestaurantReviewService {
        
        public RestaurantReviewServiceClient() {
        }
        
        public RestaurantReviewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestaurantReviewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestaurantReviewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestaurantReviewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[] GetReviewByUserId(string id) {
            return base.Channel.GetReviewByUserId(id);
        }
        
        public System.Threading.Tasks.Task<RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[]> GetReviewByUserIdAsync(string id) {
            return base.Channel.GetReviewByUserIdAsync(id);
        }
        
        public int AddReview(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review) {
            return base.Channel.AddReview(review);
        }
        
        public System.Threading.Tasks.Task<int> AddReviewAsync(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review) {
            return base.Channel.AddReviewAsync(review);
        }
        
        public int UpdateReview(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review) {
            return base.Channel.UpdateReview(review);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReviewAsync(RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview review) {
            return base.Channel.UpdateReviewAsync(review);
        }
        
        public int DeleteReviewByUserId(string id) {
            return base.Channel.DeleteReviewByUserId(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteReviewByUserIdAsync(string id) {
            return base.Channel.DeleteReviewByUserIdAsync(id);
        }
        
        public int DeleteReviewByUserIdandRestaurantId(string userid, int restaurantid) {
            return base.Channel.DeleteReviewByUserIdandRestaurantId(userid, restaurantid);
        }
        
        public System.Threading.Tasks.Task<int> DeleteReviewByUserIdandRestaurantIdAsync(string userid, int restaurantid) {
            return base.Channel.DeleteReviewByUserIdandRestaurantIdAsync(userid, restaurantid);
        }
        
        public RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[] GetReviewByRestaurantId(int restaurantid) {
            return base.Channel.GetReviewByRestaurantId(restaurantid);
        }
        
        public System.Threading.Tasks.Task<RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview[]> GetReviewByRestaurantIdAsync(int restaurantid) {
            return base.Channel.GetReviewByRestaurantIdAsync(restaurantid);
        }
        
        public RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview GetReviewByRestaurantIdandUserId(int restuarantid, string userid) {
            return base.Channel.GetReviewByRestaurantIdandUserId(restuarantid, userid);
        }
        
        public System.Threading.Tasks.Task<RestaurantReviewSystem_WebClient.RestaurantReviewServiceReference.RestaurantReview> GetReviewByRestaurantIdandUserIdAsync(int restuarantid, string userid) {
            return base.Channel.GetReviewByRestaurantIdandUserIdAsync(restuarantid, userid);
        }
    }
}
